Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]

Example 2:
Input: root = [1]
Output: [[1]]

Example 3:
Input: root = []
Output: []

--------------------------------------------------------------- LeetCode - 102 ----------------------------------------------------------------------------------

class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        
        
        queue<TreeNode*> q;
        vector<vector<int>> v;

        if(root == NULL){
            return v;
        }

        q.push(root);

        while(!q.empty()){

            int n = q.size();
            vector<int>t;

            for(int i=0;i<n;i++){

                TreeNode* temp = q.front();
                q.pop();

                if(temp->left){
                    q.push(temp->left);
                }
                if(temp->right){
                    q.push(temp->right);
                }

                t.push_back(temp->val);
            }

            v.push_back(t);
        }
        
         return v;
    }
};
